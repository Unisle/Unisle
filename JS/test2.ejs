<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Class TESTだよ</title>
</head>

<body>
    <script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-app.js"></script>

    <!-- Add additional services that you want to use -->
    <script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-database.js"></script>
    <script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-firestore.js"></script>
    <script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-messaging.js"></script>
    <script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-functions.js"></script>

    <!--Bootstrap-->
    <!-- BootstrapのCSS読み込み -->
    <link href="../css/bootstrap.min.css" rel="stylesheet">
    <!-- jQuery読み込み -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <!-- BootstrapのJS読み込み -->
    <script src="../js/bootstrap.min.js"></script>
    <script>
        // Firebaseの初期化
        var config = {
            apiKey: "AIzaSyB91yPNhjOREC8S8RXEAoUaZa1gsj7s0MY",
            authDomain: "unisle-dbba5.firebaseapp.com",
            databaseURL: "https://unisle-dbba5.firebaseio.com",
        }
        firebase.initializeApp(config)
        database = firebase.database()

    </script>

    <script src="../network/Init.js"></script>
    <script src="../network/AccountNetwork.js"></script>
    <script src="../network/GroupNetwork.js"></script>
    <script src="../network/NoticeNetwork.js"></script>
    <script src="../network/PostNetwork.js"></script>
    <script src="../network/ProjectNetwork.js"></script>
    <script src="../network/ScheduleNetwork.js"></script>
    <script>

        class Network {
            //Networkすべてを扱うクラス
            constructor() {
            }

            create() {
                this.Account = new AccountNetwork()
                this.Post = new PostNetwork()
                this.Project = new ProjectNetwork()
                this.Group = new GroupNetwork()
                this.Schedule = new ScheduleNetwork()
                this.Notice = new NoticeNetwork()
            }

            get() {
                this.Network = []
                this.Network.Account = this.Account
                this.Network.Post = this.Post
                this.Network.Project = this.Project
                this.Network.Group = this.Group
                this.Network.Schedule = this.Schedule
                this.Network.Notice = this.Notice
                return this.Network
            }
        }

        class Factory {
            //MyAccount, PeerAccountを生成する工場クラス
            constructor() {
                this.NetworkClass = new Network()
                this.NetworkClass.create()
                this.network = this.NetworkClass.getNetworks()//network Classすべてを含む
            }

            create() {

            }
        }

        const Account = new AccountNetwork()
        const Post = new PostNetwork()
        const Project = new ProjectNetwork()
        const Group = new GroupNetwork()
        const Notice = new NoticeNetwork()
    </script>

    <p>ようこそ、ゆっくりしていってね！</p>
    <p>Make a Group</p>
    <p>Group Name</p>
    <input type="text" id="Groupname" />
    <button onclick="Group.create(document.getElementById('Groupname').value)">make a Group</button>
    </div>
    <p>get currentGroupKey</p>

    <div id="currentGroupKey"></div>
    <p>join Group</p>
    <input type="text" id="GroupID">
    <button onclick="Group.join(document.getElementById('GroupID').value)">join this Group</button>
    <p>--------------------------</p>
    <div>
        <p>PUT MESSAGE</p>
        <input type="text" id="message" />
        <script>
        </script>
        <button onclick="Post.set(document.getElementById('message').value)">send message</button>
    </div>

    <div>
        <p>PUT Profile</p>
        <p>username</p>
        <input type="text" id="username" />
        <p>pic num</p>
        <input type="text" id="pic" />
        <button onclick="Account.setProfile(document.getElementById('username').value, 
                                            document.getElementById('pic').value)">send profile</button>
    </div>

    <div>
        <p>MAKE A PROJECT</p>
        <p>TITLE</p>
        <input type="text" id="ProjectTitle" />
        <p>CONTENT MESSAGE</p>
        <input type="text" id="ProjectContent" />
        <p>RECRUIT MESSAGE</p>
        <input type="text" id="ProjectRecruit" />
        <p>DENSITY</p>
        <input type="text" id="ProjectDensity" />
        <p>PERIOD</p>
        <input type="text" id="ProjectPeriod" />
        <script>
        </script>
        <button onclick="Project.create((document.getElementById('ProjectTitle').value),
                                        (document.getElementById('ProjectContent').value),
                                        (document.getElementById('ProjectRecruit').value),
                                        (document.getElementById('ProjectDensity').value),
                                        (document.getElementById('ProjectPeriod').value))
                                         ">make a Project</button>

        <button onclick="Account.isLogin()">IS LOGIN</button>
        <button onclick="Project.getMine_makeButton(Project)">getProject</button>
        <div id="projectkey"></div>
        <div id="projectbtn"></div>
        <div>
            <div id="body"></div>
            <button onclick="Post.get()">get post</button>
        </div>
        <button onclick="Account.getpeer()">get peer</button>
        <div id="pids"></div>
        <button onclick="Notice.send_makeButton()">send notice</button>
        <div id="noticebtn"></div>
        <button onclick="Notice.get()">get Notice</button>
        <div id="notice"></div>
        <script>
            //document.addEventListener('DOMContentLoaded', Account.isLogin)
        </script>
    </div>

    <header style="background-color:gray">Header</header>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-2" style="background-color:red;">Red</div>
            <div class="col-sm-8" style="background-color:blue;">Blue</div>
            <div class="col-sm-2" style="background-color:yellow;">Yellow</div>
        </div>
    </div>
    <footer style="background-color:gray">Footer</footer>
    <div class="container">
        <table class="table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>名前</th>
                    <th>メールアドレス</th>
                    <th>電話番号</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope="row">1</th>
                    <td>煌木 太郎</td>
                    <td>taro.kirameki@example.com</td>
                    <td>09011112222</td>
                </tr>
                <tr>
                    <th scope="row">2</th>
                    <td>煌木 次郎</td>
                    <td>jiro.kirameki@example.com</td>
                    <td>09033334444</td>
                </tr>
                <tr>
                    <th scope="row">3</th>
                    <td>煌木 花子</td>
                    <td>hanako.kirameki@example.com</td>
                    <td>09055556666</td>
                </tr>
            </tbody>
        </table>
    </div>
</body>

</html>